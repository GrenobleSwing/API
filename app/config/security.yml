# To get started with security, check out the documentation:
# http://symfony.com/doc/current/security.html
security:
    encoders:
        #Symfony\Component\Security\Core\User\User: plaintext
        
        GS\ApiBundle\Entity\User:
            algorithm: bcrypt
            cost: 12

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    # http://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded
    providers:
        our_db_provider:
            entity:
                class: GSApiBundle:User
                property: email
                # if you're using multiple entity managers
                # manager_name: customer
#        in_memory:
#            memory:
#                users:
#                    julien:
#                        password: test
#                        roles: 'ROLE_SUPER_ADMIN'

    firewalls:
        login:
            pattern:  ^/api/auth
            provider: our_db_provider
            stateless: true
            anonymous: true
            form_login:
                check_path:               /api/auth
                username_parameter:       login
                password_parameter:       password
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
                require_previous_session: false
            logout:
                path:   /api/logout
                target: /

#        api:
#            pattern:   ^/api
#            provider: our_db_provider
#            stateless: true
#            guard:
#                authenticators:
#                    - lexik_jwt_authentication.jwt_token_authenticator

#        no_security:
#            pattern: ^/api/register
#            security: false

        main:
            pattern: ^/
            anonymous: ~
#            http-basic: ~
#            provider: our_db_provider
#            #provider: in_memory
#            logout:
#                path:   /api/logout
#                target: /


    access_control:
        - { path: ^/api/auth, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
#        - { path: ^/admin, roles: ROLE_ADMIN }
#        - { path: ^/test, roles: ROLE_USER }
